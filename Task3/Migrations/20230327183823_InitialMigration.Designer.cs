// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task3.Models;

namespace Task3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230327183823_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task3.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Pies",
                            Description = "Pies category"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Burgers",
                            Description = "Burgers category"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Pizza",
                            Description = "Pizza category"
                        });
                });

            modelBuilder.Entity("Task3.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("unitsOnOrder")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryId = 1,
                            ProductName = "Apple Pie",
                            SupplierID = 1,
                            UnitInStock = 5,
                            UnitPrice = 10,
                            unitsOnOrder = 3
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryId = 1,
                            ProductName = "Blueberry Cheese Cake",
                            SupplierID = 1,
                            UnitInStock = 5,
                            UnitPrice = 50,
                            unitsOnOrder = 3
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryId = 1,
                            ProductName = "Cheese Cake",
                            SupplierID = 1,
                            UnitInStock = 10,
                            UnitPrice = 70,
                            unitsOnOrder = 7
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryId = 2,
                            ProductName = "Whopper® Cheese",
                            SupplierID = 1,
                            UnitInStock = 10,
                            UnitPrice = 70,
                            unitsOnOrder = 7
                        },
                        new
                        {
                            ProductID = 5,
                            CategoryId = 2,
                            ProductName = "Big King®",
                            SupplierID = 1,
                            UnitInStock = 10,
                            UnitPrice = 100,
                            unitsOnOrder = 7
                        },
                        new
                        {
                            ProductID = 6,
                            CategoryId = 2,
                            ProductName = "Cheeseburger",
                            SupplierID = 1,
                            UnitInStock = 100,
                            UnitPrice = 59,
                            unitsOnOrder = 17
                        },
                        new
                        {
                            ProductID = 7,
                            CategoryId = 3,
                            ProductName = "Pepperoni Pizza",
                            SupplierID = 1,
                            UnitInStock = 120,
                            UnitPrice = 400,
                            unitsOnOrder = 57
                        },
                        new
                        {
                            ProductID = 8,
                            CategoryId = 3,
                            ProductName = "Margherita Pizza",
                            SupplierID = 1,
                            UnitInStock = 180,
                            UnitPrice = 200,
                            unitsOnOrder = 95
                        },
                        new
                        {
                            ProductID = 9,
                            CategoryId = 3,
                            ProductName = "Jumbo Pizza",
                            SupplierID = 1,
                            UnitInStock = 170,
                            UnitPrice = 250,
                            unitsOnOrder = 95
                        });
                });

            modelBuilder.Entity("Task3.Models.Product", b =>
                {
                    b.HasOne("Task3.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
